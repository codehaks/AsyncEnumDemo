@page
@model MyApp.Pages.IndexModel
@{
    ViewData["Title"] = "Home";
}

<h2>MyApp</h2>
<hr />

<div id="app">

    <form id="uploadForm" v-on:submit.prevent="uploadFile" enctype="multipart/form-data" method="post">
        <input type="file" class="form-control-file" name="file" />
        <button type="submit" class="btn btn-primary">Submit</button>
    </form>
    <hr />
    <canvas id="myChart" width="1200" height="400"></canvas>
</div>

@section scripts{
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>
    <script src="~/lib/Chart.js/Chart.js"></script>

    <script>

        var app = new Vue({
            el: "#app",
            data: {
                days: [],
                prices: [],
                chart: null
            },
            methods: {
                uploadFile: function () {
                    var form = document.getElementById('uploadForm');
                    var formData = new FormData(form);

                    $.ajax({
                        url: '/data/upload',
                        data: formData ? formData : form.serialize(),
                        cache: false,
                        contentType: false,
                        processData: false,
                        type: 'POST',
                        success: function (data, textStatus, jqXHR) {
                            alert("done!");
                        }
                    });


                }
            },
            mounted: function () {
                var vm = this;

                var ctx = $("#myChart");
                vm.chart = new Chart(ctx, {
                    type: 'line',
                    data: {
                        //labels: [1, 2,3,4,5],
                        datasets: [{
                            label: 'Bitcoin Price History',
                            // data: [5,10,15,5,7],
                            backgroundColor: [
                                'rgba(255, 99, 132, 0.2)'

                            ],
                            borderWidth: 1,
                            pointRadius: 0,
                        }]
                    },
                    options: {
                        scales: {
                            xAxes: [{
                                gridLines: {
                                    display: false
                                }
                            }],
                            yAxes: [{
                                gridLines: {
                                    display: false
                                },
                                ticks: {
                                    beginAtZero: true
                                }
                            }]
                        }
                    }
                });

                vm.connection = new signalR.HubConnectionBuilder()
                    .withUrl('/chartHub')
                    .configureLogging(signalR.LogLevel.Information)
                    .build();

                vm.connection.start()
                    .catch(function (err) {
                        return console.error(err.toSting());
                    });

                vm.connection.on('sendBitcoinData', function (date, price) {

                    //console.log(price);

                    //vm.days.push(date);
                    //vm.prices.push(price);

                    //vm.chart.data.label(date);

                    vm.chart.data.labels.push(" ");

                    vm.chart.data.datasets.forEach((dataset) => {
                        dataset.data.push(price);
                    });
                    vm.chart.update();

                });
            }

        });

    </script>

}

